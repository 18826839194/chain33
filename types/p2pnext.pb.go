// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p2pnext.proto

package types // import "github.com/33cn/chain33/types"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageComm struct {
	// shared between all requests
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Gossip               bool     `protobuf:"varint,4,opt,name=gossip,proto3" json:"gossip,omitempty"`
	NodeId               string   `protobuf:"bytes,5,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	NodePubKey           []byte   `protobuf:"bytes,6,opt,name=nodePubKey,proto3" json:"nodePubKey,omitempty"`
	Sign                 []byte   `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageComm) Reset()         { *m = MessageComm{} }
func (m *MessageComm) String() string { return proto.CompactTextString(m) }
func (*MessageComm) ProtoMessage()    {}
func (*MessageComm) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{0}
}
func (m *MessageComm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageComm.Unmarshal(m, b)
}
func (m *MessageComm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageComm.Marshal(b, m, deterministic)
}
func (dst *MessageComm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageComm.Merge(dst, src)
}
func (m *MessageComm) XXX_Size() int {
	return xxx_messageInfo_MessageComm.Size(m)
}
func (m *MessageComm) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageComm.DiscardUnknown(m)
}

var xxx_messageInfo_MessageComm proto.InternalMessageInfo

func (m *MessageComm) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *MessageComm) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MessageComm) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MessageComm) GetGossip() bool {
	if m != nil {
		return m.Gossip
	}
	return false
}

func (m *MessageComm) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *MessageComm) GetNodePubKey() []byte {
	if m != nil {
		return m.NodePubKey
	}
	return nil
}

func (m *MessageComm) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

type MessageUtil struct {
	Common *MessageComm `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*MessageUtil_PeerInfo
	//	*MessageUtil_Version
	//	*MessageUtil_VersionAck
	//	*MessageUtil_External
	//	*MessageUtil_Getblocks
	//	*MessageUtil_Invdatas
	Value                isMessageUtil_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MessageUtil) Reset()         { *m = MessageUtil{} }
func (m *MessageUtil) String() string { return proto.CompactTextString(m) }
func (*MessageUtil) ProtoMessage()    {}
func (*MessageUtil) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{1}
}
func (m *MessageUtil) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageUtil.Unmarshal(m, b)
}
func (m *MessageUtil) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageUtil.Marshal(b, m, deterministic)
}
func (dst *MessageUtil) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageUtil.Merge(dst, src)
}
func (m *MessageUtil) XXX_Size() int {
	return xxx_messageInfo_MessageUtil.Size(m)
}
func (m *MessageUtil) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageUtil.DiscardUnknown(m)
}

var xxx_messageInfo_MessageUtil proto.InternalMessageInfo

func (m *MessageUtil) GetCommon() *MessageComm {
	if m != nil {
		return m.Common
	}
	return nil
}

type isMessageUtil_Value interface {
	isMessageUtil_Value()
}

type MessageUtil_PeerInfo struct {
	PeerInfo *P2PPeerInfo `protobuf:"bytes,2,opt,name=peerInfo,proto3,oneof"`
}

type MessageUtil_Version struct {
	Version *P2PVersion `protobuf:"bytes,3,opt,name=version,proto3,oneof"`
}

type MessageUtil_VersionAck struct {
	VersionAck *P2PVerAck `protobuf:"bytes,4,opt,name=versionAck,proto3,oneof"`
}

type MessageUtil_External struct {
	External *P2PExternalInfo `protobuf:"bytes,5,opt,name=external,proto3,oneof"`
}

type MessageUtil_Getblocks struct {
	Getblocks *P2PGetBlocks `protobuf:"bytes,6,opt,name=getblocks,proto3,oneof"`
}

type MessageUtil_Invdatas struct {
	Invdatas *InvDatas `protobuf:"bytes,7,opt,name=invdatas,proto3,oneof"`
}

func (*MessageUtil_PeerInfo) isMessageUtil_Value() {}

func (*MessageUtil_Version) isMessageUtil_Value() {}

func (*MessageUtil_VersionAck) isMessageUtil_Value() {}

func (*MessageUtil_External) isMessageUtil_Value() {}

func (*MessageUtil_Getblocks) isMessageUtil_Value() {}

func (*MessageUtil_Invdatas) isMessageUtil_Value() {}

func (m *MessageUtil) GetValue() isMessageUtil_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *MessageUtil) GetPeerInfo() *P2PPeerInfo {
	if x, ok := m.GetValue().(*MessageUtil_PeerInfo); ok {
		return x.PeerInfo
	}
	return nil
}

func (m *MessageUtil) GetVersion() *P2PVersion {
	if x, ok := m.GetValue().(*MessageUtil_Version); ok {
		return x.Version
	}
	return nil
}

func (m *MessageUtil) GetVersionAck() *P2PVerAck {
	if x, ok := m.GetValue().(*MessageUtil_VersionAck); ok {
		return x.VersionAck
	}
	return nil
}

func (m *MessageUtil) GetExternal() *P2PExternalInfo {
	if x, ok := m.GetValue().(*MessageUtil_External); ok {
		return x.External
	}
	return nil
}

func (m *MessageUtil) GetGetblocks() *P2PGetBlocks {
	if x, ok := m.GetValue().(*MessageUtil_Getblocks); ok {
		return x.Getblocks
	}
	return nil
}

func (m *MessageUtil) GetInvdatas() *InvDatas {
	if x, ok := m.GetValue().(*MessageUtil_Invdatas); ok {
		return x.Invdatas
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MessageUtil) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MessageUtil_OneofMarshaler, _MessageUtil_OneofUnmarshaler, _MessageUtil_OneofSizer, []interface{}{
		(*MessageUtil_PeerInfo)(nil),
		(*MessageUtil_Version)(nil),
		(*MessageUtil_VersionAck)(nil),
		(*MessageUtil_External)(nil),
		(*MessageUtil_Getblocks)(nil),
		(*MessageUtil_Invdatas)(nil),
	}
}

func _MessageUtil_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MessageUtil)
	// value
	switch x := m.Value.(type) {
	case *MessageUtil_PeerInfo:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PeerInfo); err != nil {
			return err
		}
	case *MessageUtil_Version:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Version); err != nil {
			return err
		}
	case *MessageUtil_VersionAck:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VersionAck); err != nil {
			return err
		}
	case *MessageUtil_External:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.External); err != nil {
			return err
		}
	case *MessageUtil_Getblocks:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Getblocks); err != nil {
			return err
		}
	case *MessageUtil_Invdatas:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Invdatas); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MessageUtil.Value has unexpected type %T", x)
	}
	return nil
}

func _MessageUtil_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MessageUtil)
	switch tag {
	case 2: // value.peerInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(P2PPeerInfo)
		err := b.DecodeMessage(msg)
		m.Value = &MessageUtil_PeerInfo{msg}
		return true, err
	case 3: // value.version
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(P2PVersion)
		err := b.DecodeMessage(msg)
		m.Value = &MessageUtil_Version{msg}
		return true, err
	case 4: // value.versionAck
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(P2PVerAck)
		err := b.DecodeMessage(msg)
		m.Value = &MessageUtil_VersionAck{msg}
		return true, err
	case 5: // value.external
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(P2PExternalInfo)
		err := b.DecodeMessage(msg)
		m.Value = &MessageUtil_External{msg}
		return true, err
	case 6: // value.getblocks
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(P2PGetBlocks)
		err := b.DecodeMessage(msg)
		m.Value = &MessageUtil_Getblocks{msg}
		return true, err
	case 7: // value.invdatas
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InvDatas)
		err := b.DecodeMessage(msg)
		m.Value = &MessageUtil_Invdatas{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MessageUtil_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MessageUtil)
	// value
	switch x := m.Value.(type) {
	case *MessageUtil_PeerInfo:
		s := proto.Size(x.PeerInfo)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageUtil_Version:
		s := proto.Size(x.Version)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageUtil_VersionAck:
		s := proto.Size(x.VersionAck)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageUtil_External:
		s := proto.Size(x.External)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageUtil_Getblocks:
		s := proto.Size(x.Getblocks)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageUtil_Invdatas:
		s := proto.Size(x.Invdatas)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// *
// 请求获取远程节点的节点信息
type MessagePeerInfoReq struct {
	// / p2p版本
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessagePeerInfoReq) Reset()         { *m = MessagePeerInfoReq{} }
func (m *MessagePeerInfoReq) String() string { return proto.CompactTextString(m) }
func (*MessagePeerInfoReq) ProtoMessage()    {}
func (*MessagePeerInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{2}
}
func (m *MessagePeerInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagePeerInfoReq.Unmarshal(m, b)
}
func (m *MessagePeerInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagePeerInfoReq.Marshal(b, m, deterministic)
}
func (dst *MessagePeerInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagePeerInfoReq.Merge(dst, src)
}
func (m *MessagePeerInfoReq) XXX_Size() int {
	return xxx_messageInfo_MessagePeerInfoReq.Size(m)
}
func (m *MessagePeerInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagePeerInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_MessagePeerInfoReq proto.InternalMessageInfo

func (m *MessagePeerInfoReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

type MessagePeerInfoResp struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *P2PPeerInfo `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessagePeerInfoResp) Reset()         { *m = MessagePeerInfoResp{} }
func (m *MessagePeerInfoResp) String() string { return proto.CompactTextString(m) }
func (*MessagePeerInfoResp) ProtoMessage()    {}
func (*MessagePeerInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{3}
}
func (m *MessagePeerInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagePeerInfoResp.Unmarshal(m, b)
}
func (m *MessagePeerInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagePeerInfoResp.Marshal(b, m, deterministic)
}
func (dst *MessagePeerInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagePeerInfoResp.Merge(dst, src)
}
func (m *MessagePeerInfoResp) XXX_Size() int {
	return xxx_messageInfo_MessagePeerInfoResp.Size(m)
}
func (m *MessagePeerInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagePeerInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_MessagePeerInfoResp proto.InternalMessageInfo

func (m *MessagePeerInfoResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessagePeerInfoResp) GetMessage() *P2PPeerInfo {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageP2PVersionReq struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *P2PVersion  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageP2PVersionReq) Reset()         { *m = MessageP2PVersionReq{} }
func (m *MessageP2PVersionReq) String() string { return proto.CompactTextString(m) }
func (*MessageP2PVersionReq) ProtoMessage()    {}
func (*MessageP2PVersionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{4}
}
func (m *MessageP2PVersionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageP2PVersionReq.Unmarshal(m, b)
}
func (m *MessageP2PVersionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageP2PVersionReq.Marshal(b, m, deterministic)
}
func (dst *MessageP2PVersionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageP2PVersionReq.Merge(dst, src)
}
func (m *MessageP2PVersionReq) XXX_Size() int {
	return xxx_messageInfo_MessageP2PVersionReq.Size(m)
}
func (m *MessageP2PVersionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageP2PVersionReq.DiscardUnknown(m)
}

var xxx_messageInfo_MessageP2PVersionReq proto.InternalMessageInfo

func (m *MessageP2PVersionReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageP2PVersionReq) GetMessage() *P2PVersion {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageP2PVersionResp struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *P2PVersion  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageP2PVersionResp) Reset()         { *m = MessageP2PVersionResp{} }
func (m *MessageP2PVersionResp) String() string { return proto.CompactTextString(m) }
func (*MessageP2PVersionResp) ProtoMessage()    {}
func (*MessageP2PVersionResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{5}
}
func (m *MessageP2PVersionResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageP2PVersionResp.Unmarshal(m, b)
}
func (m *MessageP2PVersionResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageP2PVersionResp.Marshal(b, m, deterministic)
}
func (dst *MessageP2PVersionResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageP2PVersionResp.Merge(dst, src)
}
func (m *MessageP2PVersionResp) XXX_Size() int {
	return xxx_messageInfo_MessageP2PVersionResp.Size(m)
}
func (m *MessageP2PVersionResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageP2PVersionResp.DiscardUnknown(m)
}

var xxx_messageInfo_MessageP2PVersionResp proto.InternalMessageInfo

func (m *MessageP2PVersionResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageP2PVersionResp) GetMessage() *P2PVersion {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessagePingReq struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *P2PPing     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessagePingReq) Reset()         { *m = MessagePingReq{} }
func (m *MessagePingReq) String() string { return proto.CompactTextString(m) }
func (*MessagePingReq) ProtoMessage()    {}
func (*MessagePingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{6}
}
func (m *MessagePingReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagePingReq.Unmarshal(m, b)
}
func (m *MessagePingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagePingReq.Marshal(b, m, deterministic)
}
func (dst *MessagePingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagePingReq.Merge(dst, src)
}
func (m *MessagePingReq) XXX_Size() int {
	return xxx_messageInfo_MessagePingReq.Size(m)
}
func (m *MessagePingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagePingReq.DiscardUnknown(m)
}

var xxx_messageInfo_MessagePingReq proto.InternalMessageInfo

func (m *MessagePingReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessagePingReq) GetMessage() *P2PPing {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessagePingResp struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *P2PPong     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessagePingResp) Reset()         { *m = MessagePingResp{} }
func (m *MessagePingResp) String() string { return proto.CompactTextString(m) }
func (*MessagePingResp) ProtoMessage()    {}
func (*MessagePingResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{7}
}
func (m *MessagePingResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagePingResp.Unmarshal(m, b)
}
func (m *MessagePingResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagePingResp.Marshal(b, m, deterministic)
}
func (dst *MessagePingResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagePingResp.Merge(dst, src)
}
func (m *MessagePingResp) XXX_Size() int {
	return xxx_messageInfo_MessagePingResp.Size(m)
}
func (m *MessagePingResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagePingResp.DiscardUnknown(m)
}

var xxx_messageInfo_MessagePingResp proto.InternalMessageInfo

func (m *MessagePingResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessagePingResp) GetMessage() *P2PPong {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageAddrReq struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *P2PGetAddr  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageAddrReq) Reset()         { *m = MessageAddrReq{} }
func (m *MessageAddrReq) String() string { return proto.CompactTextString(m) }
func (*MessageAddrReq) ProtoMessage()    {}
func (*MessageAddrReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{8}
}
func (m *MessageAddrReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageAddrReq.Unmarshal(m, b)
}
func (m *MessageAddrReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageAddrReq.Marshal(b, m, deterministic)
}
func (dst *MessageAddrReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageAddrReq.Merge(dst, src)
}
func (m *MessageAddrReq) XXX_Size() int {
	return xxx_messageInfo_MessageAddrReq.Size(m)
}
func (m *MessageAddrReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageAddrReq.DiscardUnknown(m)
}

var xxx_messageInfo_MessageAddrReq proto.InternalMessageInfo

func (m *MessageAddrReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageAddrReq) GetMessage() *P2PGetAddr {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageAddrResp struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *P2PAddr     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageAddrResp) Reset()         { *m = MessageAddrResp{} }
func (m *MessageAddrResp) String() string { return proto.CompactTextString(m) }
func (*MessageAddrResp) ProtoMessage()    {}
func (*MessageAddrResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{9}
}
func (m *MessageAddrResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageAddrResp.Unmarshal(m, b)
}
func (m *MessageAddrResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageAddrResp.Marshal(b, m, deterministic)
}
func (dst *MessageAddrResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageAddrResp.Merge(dst, src)
}
func (m *MessageAddrResp) XXX_Size() int {
	return xxx_messageInfo_MessageAddrResp.Size(m)
}
func (m *MessageAddrResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageAddrResp.DiscardUnknown(m)
}

var xxx_messageInfo_MessageAddrResp proto.InternalMessageInfo

func (m *MessageAddrResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageAddrResp) GetMessage() *P2PAddr {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageAddrList struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *P2PAddrList `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageAddrList) Reset()         { *m = MessageAddrList{} }
func (m *MessageAddrList) String() string { return proto.CompactTextString(m) }
func (*MessageAddrList) ProtoMessage()    {}
func (*MessageAddrList) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{10}
}
func (m *MessageAddrList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageAddrList.Unmarshal(m, b)
}
func (m *MessageAddrList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageAddrList.Marshal(b, m, deterministic)
}
func (dst *MessageAddrList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageAddrList.Merge(dst, src)
}
func (m *MessageAddrList) XXX_Size() int {
	return xxx_messageInfo_MessageAddrList.Size(m)
}
func (m *MessageAddrList) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageAddrList.DiscardUnknown(m)
}

var xxx_messageInfo_MessageAddrList proto.InternalMessageInfo

func (m *MessageAddrList) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageAddrList) GetMessage() *P2PAddrList {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageExternalNetReq struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageExternalNetReq) Reset()         { *m = MessageExternalNetReq{} }
func (m *MessageExternalNetReq) String() string { return proto.CompactTextString(m) }
func (*MessageExternalNetReq) ProtoMessage()    {}
func (*MessageExternalNetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{11}
}
func (m *MessageExternalNetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageExternalNetReq.Unmarshal(m, b)
}
func (m *MessageExternalNetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageExternalNetReq.Marshal(b, m, deterministic)
}
func (dst *MessageExternalNetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageExternalNetReq.Merge(dst, src)
}
func (m *MessageExternalNetReq) XXX_Size() int {
	return xxx_messageInfo_MessageExternalNetReq.Size(m)
}
func (m *MessageExternalNetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageExternalNetReq.DiscardUnknown(m)
}

var xxx_messageInfo_MessageExternalNetReq proto.InternalMessageInfo

func (m *MessageExternalNetReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

type MessageExternalNetResp struct {
	MessageData          *MessageComm     `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *P2PExternalInfo `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MessageExternalNetResp) Reset()         { *m = MessageExternalNetResp{} }
func (m *MessageExternalNetResp) String() string { return proto.CompactTextString(m) }
func (*MessageExternalNetResp) ProtoMessage()    {}
func (*MessageExternalNetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{12}
}
func (m *MessageExternalNetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageExternalNetResp.Unmarshal(m, b)
}
func (m *MessageExternalNetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageExternalNetResp.Marshal(b, m, deterministic)
}
func (dst *MessageExternalNetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageExternalNetResp.Merge(dst, src)
}
func (m *MessageExternalNetResp) XXX_Size() int {
	return xxx_messageInfo_MessageExternalNetResp.Size(m)
}
func (m *MessageExternalNetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageExternalNetResp.DiscardUnknown(m)
}

var xxx_messageInfo_MessageExternalNetResp proto.InternalMessageInfo

func (m *MessageExternalNetResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageExternalNetResp) GetMessage() *P2PExternalInfo {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageGetBlocksReq struct {
	MessageData          *MessageComm  `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *P2PGetBlocks `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MessageGetBlocksReq) Reset()         { *m = MessageGetBlocksReq{} }
func (m *MessageGetBlocksReq) String() string { return proto.CompactTextString(m) }
func (*MessageGetBlocksReq) ProtoMessage()    {}
func (*MessageGetBlocksReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{13}
}
func (m *MessageGetBlocksReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageGetBlocksReq.Unmarshal(m, b)
}
func (m *MessageGetBlocksReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageGetBlocksReq.Marshal(b, m, deterministic)
}
func (dst *MessageGetBlocksReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageGetBlocksReq.Merge(dst, src)
}
func (m *MessageGetBlocksReq) XXX_Size() int {
	return xxx_messageInfo_MessageGetBlocksReq.Size(m)
}
func (m *MessageGetBlocksReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageGetBlocksReq.DiscardUnknown(m)
}

var xxx_messageInfo_MessageGetBlocksReq proto.InternalMessageInfo

func (m *MessageGetBlocksReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageGetBlocksReq) GetMessage() *P2PGetBlocks {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageGetBlocksResp struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *InvDatas    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageGetBlocksResp) Reset()         { *m = MessageGetBlocksResp{} }
func (m *MessageGetBlocksResp) String() string { return proto.CompactTextString(m) }
func (*MessageGetBlocksResp) ProtoMessage()    {}
func (*MessageGetBlocksResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{14}
}
func (m *MessageGetBlocksResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageGetBlocksResp.Unmarshal(m, b)
}
func (m *MessageGetBlocksResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageGetBlocksResp.Marshal(b, m, deterministic)
}
func (dst *MessageGetBlocksResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageGetBlocksResp.Merge(dst, src)
}
func (m *MessageGetBlocksResp) XXX_Size() int {
	return xxx_messageInfo_MessageGetBlocksResp.Size(m)
}
func (m *MessageGetBlocksResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageGetBlocksResp.DiscardUnknown(m)
}

var xxx_messageInfo_MessageGetBlocksResp proto.InternalMessageInfo

func (m *MessageGetBlocksResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageGetBlocksResp) GetMessage() *InvDatas {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageGetMempoolReq struct {
	MessageData          *MessageComm   `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *P2PGetMempool `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MessageGetMempoolReq) Reset()         { *m = MessageGetMempoolReq{} }
func (m *MessageGetMempoolReq) String() string { return proto.CompactTextString(m) }
func (*MessageGetMempoolReq) ProtoMessage()    {}
func (*MessageGetMempoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{15}
}
func (m *MessageGetMempoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageGetMempoolReq.Unmarshal(m, b)
}
func (m *MessageGetMempoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageGetMempoolReq.Marshal(b, m, deterministic)
}
func (dst *MessageGetMempoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageGetMempoolReq.Merge(dst, src)
}
func (m *MessageGetMempoolReq) XXX_Size() int {
	return xxx_messageInfo_MessageGetMempoolReq.Size(m)
}
func (m *MessageGetMempoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageGetMempoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_MessageGetMempoolReq proto.InternalMessageInfo

func (m *MessageGetMempoolReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageGetMempoolReq) GetMessage() *P2PGetMempool {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageVersion struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *Versions    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageVersion) Reset()         { *m = MessageVersion{} }
func (m *MessageVersion) String() string { return proto.CompactTextString(m) }
func (*MessageVersion) ProtoMessage()    {}
func (*MessageVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{16}
}
func (m *MessageVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageVersion.Unmarshal(m, b)
}
func (m *MessageVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageVersion.Marshal(b, m, deterministic)
}
func (dst *MessageVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageVersion.Merge(dst, src)
}
func (m *MessageVersion) XXX_Size() int {
	return xxx_messageInfo_MessageVersion.Size(m)
}
func (m *MessageVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageVersion.DiscardUnknown(m)
}

var xxx_messageInfo_MessageVersion proto.InternalMessageInfo

func (m *MessageVersion) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageVersion) GetMessage() *Versions {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageHeaderReq struct {
	MessageData          *MessageComm   `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *P2PGetHeaders `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MessageHeaderReq) Reset()         { *m = MessageHeaderReq{} }
func (m *MessageHeaderReq) String() string { return proto.CompactTextString(m) }
func (*MessageHeaderReq) ProtoMessage()    {}
func (*MessageHeaderReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{17}
}
func (m *MessageHeaderReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageHeaderReq.Unmarshal(m, b)
}
func (m *MessageHeaderReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageHeaderReq.Marshal(b, m, deterministic)
}
func (dst *MessageHeaderReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageHeaderReq.Merge(dst, src)
}
func (m *MessageHeaderReq) XXX_Size() int {
	return xxx_messageInfo_MessageHeaderReq.Size(m)
}
func (m *MessageHeaderReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageHeaderReq.DiscardUnknown(m)
}

var xxx_messageInfo_MessageHeaderReq proto.InternalMessageInfo

func (m *MessageHeaderReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageHeaderReq) GetMessage() *P2PGetHeaders {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageHeaderResp struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *P2PHeaders  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageHeaderResp) Reset()         { *m = MessageHeaderResp{} }
func (m *MessageHeaderResp) String() string { return proto.CompactTextString(m) }
func (*MessageHeaderResp) ProtoMessage()    {}
func (*MessageHeaderResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{18}
}
func (m *MessageHeaderResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageHeaderResp.Unmarshal(m, b)
}
func (m *MessageHeaderResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageHeaderResp.Marshal(b, m, deterministic)
}
func (dst *MessageHeaderResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageHeaderResp.Merge(dst, src)
}
func (m *MessageHeaderResp) XXX_Size() int {
	return xxx_messageInfo_MessageHeaderResp.Size(m)
}
func (m *MessageHeaderResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageHeaderResp.DiscardUnknown(m)
}

var xxx_messageInfo_MessageHeaderResp proto.InternalMessageInfo

func (m *MessageHeaderResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageHeaderResp) GetMessage() *P2PHeaders {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageInvDataReq struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *InvData     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageInvDataReq) Reset()         { *m = MessageInvDataReq{} }
func (m *MessageInvDataReq) String() string { return proto.CompactTextString(m) }
func (*MessageInvDataReq) ProtoMessage()    {}
func (*MessageInvDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{19}
}
func (m *MessageInvDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageInvDataReq.Unmarshal(m, b)
}
func (m *MessageInvDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageInvDataReq.Marshal(b, m, deterministic)
}
func (dst *MessageInvDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageInvDataReq.Merge(dst, src)
}
func (m *MessageInvDataReq) XXX_Size() int {
	return xxx_messageInfo_MessageInvDataReq.Size(m)
}
func (m *MessageInvDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageInvDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_MessageInvDataReq proto.InternalMessageInfo

func (m *MessageInvDataReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageInvDataReq) GetMessage() *InvData {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessagePeerList struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *PeerList    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessagePeerList) Reset()         { *m = MessagePeerList{} }
func (m *MessagePeerList) String() string { return proto.CompactTextString(m) }
func (*MessagePeerList) ProtoMessage()    {}
func (*MessagePeerList) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{20}
}
func (m *MessagePeerList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagePeerList.Unmarshal(m, b)
}
func (m *MessagePeerList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagePeerList.Marshal(b, m, deterministic)
}
func (dst *MessagePeerList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagePeerList.Merge(dst, src)
}
func (m *MessagePeerList) XXX_Size() int {
	return xxx_messageInfo_MessagePeerList.Size(m)
}
func (m *MessagePeerList) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagePeerList.DiscardUnknown(m)
}

var xxx_messageInfo_MessagePeerList proto.InternalMessageInfo

func (m *MessagePeerList) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessagePeerList) GetMessage() *PeerList {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageNetInfo struct {
	MessageData          *MessageComm `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	Message              *NodeNetInfo `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageNetInfo) Reset()         { *m = MessageNetInfo{} }
func (m *MessageNetInfo) String() string { return proto.CompactTextString(m) }
func (*MessageNetInfo) ProtoMessage()    {}
func (*MessageNetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{21}
}
func (m *MessageNetInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageNetInfo.Unmarshal(m, b)
}
func (m *MessageNetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageNetInfo.Marshal(b, m, deterministic)
}
func (dst *MessageNetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageNetInfo.Merge(dst, src)
}
func (m *MessageNetInfo) XXX_Size() int {
	return xxx_messageInfo_MessageNetInfo.Size(m)
}
func (m *MessageNetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageNetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MessageNetInfo proto.InternalMessageInfo

func (m *MessageNetInfo) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageNetInfo) GetMessage() *NodeNetInfo {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessagePeersReply struct {
	Common               *MessageComm `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	PeersReply           *PeersReply  `protobuf:"bytes,2,opt,name=peersReply,proto3" json:"peersReply,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessagePeersReply) Reset()         { *m = MessagePeersReply{} }
func (m *MessagePeersReply) String() string { return proto.CompactTextString(m) }
func (*MessagePeersReply) ProtoMessage()    {}
func (*MessagePeersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{22}
}
func (m *MessagePeersReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagePeersReply.Unmarshal(m, b)
}
func (m *MessagePeersReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagePeersReply.Marshal(b, m, deterministic)
}
func (dst *MessagePeersReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagePeersReply.Merge(dst, src)
}
func (m *MessagePeersReply) XXX_Size() int {
	return xxx_messageInfo_MessagePeersReply.Size(m)
}
func (m *MessagePeersReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagePeersReply.DiscardUnknown(m)
}

var xxx_messageInfo_MessagePeersReply proto.InternalMessageInfo

func (m *MessagePeersReply) GetCommon() *MessageComm {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *MessagePeersReply) GetPeersReply() *PeersReply {
	if m != nil {
		return m.PeersReply
	}
	return nil
}

type MessageBroadCast struct {
	Common               *MessageComm   `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Message              *BroadCastData `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MessageBroadCast) Reset()         { *m = MessageBroadCast{} }
func (m *MessageBroadCast) String() string { return proto.CompactTextString(m) }
func (*MessageBroadCast) ProtoMessage()    {}
func (*MessageBroadCast) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{23}
}
func (m *MessageBroadCast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageBroadCast.Unmarshal(m, b)
}
func (m *MessageBroadCast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageBroadCast.Marshal(b, m, deterministic)
}
func (dst *MessageBroadCast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageBroadCast.Merge(dst, src)
}
func (m *MessageBroadCast) XXX_Size() int {
	return xxx_messageInfo_MessageBroadCast.Size(m)
}
func (m *MessageBroadCast) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageBroadCast.DiscardUnknown(m)
}

var xxx_messageInfo_MessageBroadCast proto.InternalMessageInfo

func (m *MessageBroadCast) GetCommon() *MessageComm {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *MessageBroadCast) GetMessage() *BroadCastData {
	if m != nil {
		return m.Message
	}
	return nil
}

type P2PStoreRequest struct {
	ProtocolID string `protobuf:"bytes,1,opt,name=protocolID,proto3" json:"protocolID,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*P2PStoreRequest_ReqChunkRecords
	//	*P2PStoreRequest_ChunkInfoMsg
	//	*P2PStoreRequest_ReqBlocks
	Data                 isP2PStoreRequest_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *P2PStoreRequest) Reset()         { *m = P2PStoreRequest{} }
func (m *P2PStoreRequest) String() string { return proto.CompactTextString(m) }
func (*P2PStoreRequest) ProtoMessage()    {}
func (*P2PStoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{24}
}
func (m *P2PStoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_P2PStoreRequest.Unmarshal(m, b)
}
func (m *P2PStoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_P2PStoreRequest.Marshal(b, m, deterministic)
}
func (dst *P2PStoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_P2PStoreRequest.Merge(dst, src)
}
func (m *P2PStoreRequest) XXX_Size() int {
	return xxx_messageInfo_P2PStoreRequest.Size(m)
}
func (m *P2PStoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_P2PStoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_P2PStoreRequest proto.InternalMessageInfo

func (m *P2PStoreRequest) GetProtocolID() string {
	if m != nil {
		return m.ProtocolID
	}
	return ""
}

type isP2PStoreRequest_Data interface {
	isP2PStoreRequest_Data()
}

type P2PStoreRequest_ReqChunkRecords struct {
	ReqChunkRecords *ReqChunkRecords `protobuf:"bytes,2,opt,name=reqChunkRecords,proto3,oneof"`
}

type P2PStoreRequest_ChunkInfoMsg struct {
	ChunkInfoMsg *ChunkInfoMsg `protobuf:"bytes,3,opt,name=chunkInfoMsg,proto3,oneof"`
}

type P2PStoreRequest_ReqBlocks struct {
	ReqBlocks *ReqBlocks `protobuf:"bytes,4,opt,name=reqBlocks,proto3,oneof"`
}

func (*P2PStoreRequest_ReqChunkRecords) isP2PStoreRequest_Data() {}

func (*P2PStoreRequest_ChunkInfoMsg) isP2PStoreRequest_Data() {}

func (*P2PStoreRequest_ReqBlocks) isP2PStoreRequest_Data() {}

func (m *P2PStoreRequest) GetData() isP2PStoreRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *P2PStoreRequest) GetReqChunkRecords() *ReqChunkRecords {
	if x, ok := m.GetData().(*P2PStoreRequest_ReqChunkRecords); ok {
		return x.ReqChunkRecords
	}
	return nil
}

func (m *P2PStoreRequest) GetChunkInfoMsg() *ChunkInfoMsg {
	if x, ok := m.GetData().(*P2PStoreRequest_ChunkInfoMsg); ok {
		return x.ChunkInfoMsg
	}
	return nil
}

func (m *P2PStoreRequest) GetReqBlocks() *ReqBlocks {
	if x, ok := m.GetData().(*P2PStoreRequest_ReqBlocks); ok {
		return x.ReqBlocks
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*P2PStoreRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _P2PStoreRequest_OneofMarshaler, _P2PStoreRequest_OneofUnmarshaler, _P2PStoreRequest_OneofSizer, []interface{}{
		(*P2PStoreRequest_ReqChunkRecords)(nil),
		(*P2PStoreRequest_ChunkInfoMsg)(nil),
		(*P2PStoreRequest_ReqBlocks)(nil),
	}
}

func _P2PStoreRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*P2PStoreRequest)
	// data
	switch x := m.Data.(type) {
	case *P2PStoreRequest_ReqChunkRecords:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReqChunkRecords); err != nil {
			return err
		}
	case *P2PStoreRequest_ChunkInfoMsg:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChunkInfoMsg); err != nil {
			return err
		}
	case *P2PStoreRequest_ReqBlocks:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReqBlocks); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("P2PStoreRequest.Data has unexpected type %T", x)
	}
	return nil
}

func _P2PStoreRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*P2PStoreRequest)
	switch tag {
	case 2: // data.reqChunkRecords
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReqChunkRecords)
		err := b.DecodeMessage(msg)
		m.Data = &P2PStoreRequest_ReqChunkRecords{msg}
		return true, err
	case 3: // data.chunkInfoMsg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChunkInfoMsg)
		err := b.DecodeMessage(msg)
		m.Data = &P2PStoreRequest_ChunkInfoMsg{msg}
		return true, err
	case 4: // data.reqBlocks
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReqBlocks)
		err := b.DecodeMessage(msg)
		m.Data = &P2PStoreRequest_ReqBlocks{msg}
		return true, err
	default:
		return false, nil
	}
}

func _P2PStoreRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*P2PStoreRequest)
	// data
	switch x := m.Data.(type) {
	case *P2PStoreRequest_ReqChunkRecords:
		s := proto.Size(x.ReqChunkRecords)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *P2PStoreRequest_ChunkInfoMsg:
		s := proto.Size(x.ChunkInfoMsg)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *P2PStoreRequest_ReqBlocks:
		s := proto.Size(x.ReqBlocks)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type P2PStoreResponse struct {
	ErrorInfo string `protobuf:"bytes,1,opt,name=errorInfo,proto3" json:"errorInfo,omitempty"`
	// Types that are valid to be assigned to Result:
	//	*P2PStoreResponse_BlockBodys
	//	*P2PStoreResponse_Headers
	//	*P2PStoreResponse_ChunkRecords
	//	*P2PStoreResponse_AddrInfo
	Result               isP2PStoreResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *P2PStoreResponse) Reset()         { *m = P2PStoreResponse{} }
func (m *P2PStoreResponse) String() string { return proto.CompactTextString(m) }
func (*P2PStoreResponse) ProtoMessage()    {}
func (*P2PStoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{25}
}
func (m *P2PStoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_P2PStoreResponse.Unmarshal(m, b)
}
func (m *P2PStoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_P2PStoreResponse.Marshal(b, m, deterministic)
}
func (dst *P2PStoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_P2PStoreResponse.Merge(dst, src)
}
func (m *P2PStoreResponse) XXX_Size() int {
	return xxx_messageInfo_P2PStoreResponse.Size(m)
}
func (m *P2PStoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_P2PStoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_P2PStoreResponse proto.InternalMessageInfo

func (m *P2PStoreResponse) GetErrorInfo() string {
	if m != nil {
		return m.ErrorInfo
	}
	return ""
}

type isP2PStoreResponse_Result interface {
	isP2PStoreResponse_Result()
}

type P2PStoreResponse_BlockBodys struct {
	BlockBodys *BlockBodys `protobuf:"bytes,2,opt,name=blockBodys,proto3,oneof"`
}

type P2PStoreResponse_Headers struct {
	Headers *Headers `protobuf:"bytes,3,opt,name=headers,proto3,oneof"`
}

type P2PStoreResponse_ChunkRecords struct {
	ChunkRecords *ChunkRecords `protobuf:"bytes,4,opt,name=chunkRecords,proto3,oneof"`
}

type P2PStoreResponse_AddrInfo struct {
	AddrInfo []byte `protobuf:"bytes,5,opt,name=addrInfo,proto3,oneof"`
}

func (*P2PStoreResponse_BlockBodys) isP2PStoreResponse_Result() {}

func (*P2PStoreResponse_Headers) isP2PStoreResponse_Result() {}

func (*P2PStoreResponse_ChunkRecords) isP2PStoreResponse_Result() {}

func (*P2PStoreResponse_AddrInfo) isP2PStoreResponse_Result() {}

func (m *P2PStoreResponse) GetResult() isP2PStoreResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *P2PStoreResponse) GetBlockBodys() *BlockBodys {
	if x, ok := m.GetResult().(*P2PStoreResponse_BlockBodys); ok {
		return x.BlockBodys
	}
	return nil
}

func (m *P2PStoreResponse) GetHeaders() *Headers {
	if x, ok := m.GetResult().(*P2PStoreResponse_Headers); ok {
		return x.Headers
	}
	return nil
}

func (m *P2PStoreResponse) GetChunkRecords() *ChunkRecords {
	if x, ok := m.GetResult().(*P2PStoreResponse_ChunkRecords); ok {
		return x.ChunkRecords
	}
	return nil
}

func (m *P2PStoreResponse) GetAddrInfo() []byte {
	if x, ok := m.GetResult().(*P2PStoreResponse_AddrInfo); ok {
		return x.AddrInfo
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*P2PStoreResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _P2PStoreResponse_OneofMarshaler, _P2PStoreResponse_OneofUnmarshaler, _P2PStoreResponse_OneofSizer, []interface{}{
		(*P2PStoreResponse_BlockBodys)(nil),
		(*P2PStoreResponse_Headers)(nil),
		(*P2PStoreResponse_ChunkRecords)(nil),
		(*P2PStoreResponse_AddrInfo)(nil),
	}
}

func _P2PStoreResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*P2PStoreResponse)
	// result
	switch x := m.Result.(type) {
	case *P2PStoreResponse_BlockBodys:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BlockBodys); err != nil {
			return err
		}
	case *P2PStoreResponse_Headers:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Headers); err != nil {
			return err
		}
	case *P2PStoreResponse_ChunkRecords:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChunkRecords); err != nil {
			return err
		}
	case *P2PStoreResponse_AddrInfo:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.AddrInfo)
	case nil:
	default:
		return fmt.Errorf("P2PStoreResponse.Result has unexpected type %T", x)
	}
	return nil
}

func _P2PStoreResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*P2PStoreResponse)
	switch tag {
	case 2: // result.blockBodys
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BlockBodys)
		err := b.DecodeMessage(msg)
		m.Result = &P2PStoreResponse_BlockBodys{msg}
		return true, err
	case 3: // result.headers
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Headers)
		err := b.DecodeMessage(msg)
		m.Result = &P2PStoreResponse_Headers{msg}
		return true, err
	case 4: // result.chunkRecords
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChunkRecords)
		err := b.DecodeMessage(msg)
		m.Result = &P2PStoreResponse_ChunkRecords{msg}
		return true, err
	case 5: // result.addrInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Result = &P2PStoreResponse_AddrInfo{x}
		return true, err
	default:
		return false, nil
	}
}

func _P2PStoreResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*P2PStoreResponse)
	// result
	switch x := m.Result.(type) {
	case *P2PStoreResponse_BlockBodys:
		s := proto.Size(x.BlockBodys)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *P2PStoreResponse_Headers:
		s := proto.Size(x.Headers)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *P2PStoreResponse_ChunkRecords:
		s := proto.Size(x.ChunkRecords)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *P2PStoreResponse_AddrInfo:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.AddrInfo)))
		n += len(x.AddrInfo)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type P2PStoreData struct {
	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*P2PStoreData_BlockBodys
	Data                 isP2PStoreData_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *P2PStoreData) Reset()         { *m = P2PStoreData{} }
func (m *P2PStoreData) String() string { return proto.CompactTextString(m) }
func (*P2PStoreData) ProtoMessage()    {}
func (*P2PStoreData) Descriptor() ([]byte, []int) {
	return fileDescriptor_p2pnext_a9fbc5c92cd5dd7f, []int{26}
}
func (m *P2PStoreData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_P2PStoreData.Unmarshal(m, b)
}
func (m *P2PStoreData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_P2PStoreData.Marshal(b, m, deterministic)
}
func (dst *P2PStoreData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_P2PStoreData.Merge(dst, src)
}
func (m *P2PStoreData) XXX_Size() int {
	return xxx_messageInfo_P2PStoreData.Size(m)
}
func (m *P2PStoreData) XXX_DiscardUnknown() {
	xxx_messageInfo_P2PStoreData.DiscardUnknown(m)
}

var xxx_messageInfo_P2PStoreData proto.InternalMessageInfo

func (m *P2PStoreData) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type isP2PStoreData_Data interface {
	isP2PStoreData_Data()
}

type P2PStoreData_BlockBodys struct {
	BlockBodys *BlockBodys `protobuf:"bytes,2,opt,name=blockBodys,proto3,oneof"`
}

func (*P2PStoreData_BlockBodys) isP2PStoreData_Data() {}

func (m *P2PStoreData) GetData() isP2PStoreData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *P2PStoreData) GetBlockBodys() *BlockBodys {
	if x, ok := m.GetData().(*P2PStoreData_BlockBodys); ok {
		return x.BlockBodys
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*P2PStoreData) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _P2PStoreData_OneofMarshaler, _P2PStoreData_OneofUnmarshaler, _P2PStoreData_OneofSizer, []interface{}{
		(*P2PStoreData_BlockBodys)(nil),
	}
}

func _P2PStoreData_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*P2PStoreData)
	// data
	switch x := m.Data.(type) {
	case *P2PStoreData_BlockBodys:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BlockBodys); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("P2PStoreData.Data has unexpected type %T", x)
	}
	return nil
}

func _P2PStoreData_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*P2PStoreData)
	switch tag {
	case 2: // data.blockBodys
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BlockBodys)
		err := b.DecodeMessage(msg)
		m.Data = &P2PStoreData_BlockBodys{msg}
		return true, err
	default:
		return false, nil
	}
}

func _P2PStoreData_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*P2PStoreData)
	// data
	switch x := m.Data.(type) {
	case *P2PStoreData_BlockBodys:
		s := proto.Size(x.BlockBodys)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*MessageComm)(nil), "types.MessageComm")
	proto.RegisterType((*MessageUtil)(nil), "types.MessageUtil")
	proto.RegisterType((*MessagePeerInfoReq)(nil), "types.MessagePeerInfoReq")
	proto.RegisterType((*MessagePeerInfoResp)(nil), "types.MessagePeerInfoResp")
	proto.RegisterType((*MessageP2PVersionReq)(nil), "types.MessageP2PVersionReq")
	proto.RegisterType((*MessageP2PVersionResp)(nil), "types.MessageP2PVersionResp")
	proto.RegisterType((*MessagePingReq)(nil), "types.MessagePingReq")
	proto.RegisterType((*MessagePingResp)(nil), "types.MessagePingResp")
	proto.RegisterType((*MessageAddrReq)(nil), "types.MessageAddrReq")
	proto.RegisterType((*MessageAddrResp)(nil), "types.MessageAddrResp")
	proto.RegisterType((*MessageAddrList)(nil), "types.MessageAddrList")
	proto.RegisterType((*MessageExternalNetReq)(nil), "types.MessageExternalNetReq")
	proto.RegisterType((*MessageExternalNetResp)(nil), "types.MessageExternalNetResp")
	proto.RegisterType((*MessageGetBlocksReq)(nil), "types.MessageGetBlocksReq")
	proto.RegisterType((*MessageGetBlocksResp)(nil), "types.MessageGetBlocksResp")
	proto.RegisterType((*MessageGetMempoolReq)(nil), "types.MessageGetMempoolReq")
	proto.RegisterType((*MessageVersion)(nil), "types.MessageVersion")
	proto.RegisterType((*MessageHeaderReq)(nil), "types.MessageHeaderReq")
	proto.RegisterType((*MessageHeaderResp)(nil), "types.MessageHeaderResp")
	proto.RegisterType((*MessageInvDataReq)(nil), "types.MessageInvDataReq")
	proto.RegisterType((*MessagePeerList)(nil), "types.MessagePeerList")
	proto.RegisterType((*MessageNetInfo)(nil), "types.MessageNetInfo")
	proto.RegisterType((*MessagePeersReply)(nil), "types.MessagePeersReply")
	proto.RegisterType((*MessageBroadCast)(nil), "types.MessageBroadCast")
	proto.RegisterType((*P2PStoreRequest)(nil), "types.P2PStoreRequest")
	proto.RegisterType((*P2PStoreResponse)(nil), "types.P2PStoreResponse")
	proto.RegisterType((*P2PStoreData)(nil), "types.P2PStoreData")
}

func init() { proto.RegisterFile("p2pnext.proto", fileDescriptor_p2pnext_a9fbc5c92cd5dd7f) }

var fileDescriptor_p2pnext_a9fbc5c92cd5dd7f = []byte{
	// 964 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x8e, 0xdb, 0x6c, 0x7e, 0x4e, 0x4a, 0x7f, 0x66, 0x97, 0x2a, 0x5a, 0x2d, 0x50, 0xe5, 0x2a,
	0x2c, 0x34, 0x2d, 0xce, 0xde, 0x70, 0x59, 0x77, 0xd1, 0xa6, 0x40, 0xab, 0x68, 0x10, 0x5c, 0x70,
	0x83, 0x5c, 0x7b, 0x48, 0xad, 0xc6, 0x1e, 0xc7, 0x33, 0x09, 0x0d, 0xe2, 0x82, 0xd7, 0xe2, 0x95,
	0xb8, 0x43, 0xe2, 0x01, 0x90, 0xc7, 0xf3, 0x67, 0xb7, 0x5d, 0xa9, 0x66, 0x73, 0xe7, 0x39, 0x73,
	0xce, 0xf9, 0xfc, 0x7d, 0x67, 0xe6, 0xe8, 0x0c, 0x7c, 0x94, 0xba, 0x69, 0x42, 0xee, 0xf8, 0x28,
	0xcd, 0x28, 0xa7, 0xe8, 0x19, 0x5f, 0xa7, 0x84, 0xbd, 0xec, 0xa6, 0x6e, 0x5a, 0x58, 0x5e, 0xee,
	0x5f, 0xcf, 0x69, 0x70, 0x1b, 0xdc, 0xf8, 0x51, 0x52, 0x58, 0x06, 0x7f, 0x39, 0xd0, 0xbb, 0x24,
	0x8c, 0xf9, 0x33, 0x72, 0x4e, 0xe3, 0x18, 0xf5, 0xa1, 0xbd, 0x22, 0x19, 0x8b, 0x68, 0xd2, 0x77,
	0x8e, 0x9c, 0x61, 0x17, 0xab, 0x25, 0x7a, 0x05, 0x5d, 0x1e, 0xc5, 0x84, 0x71, 0x3f, 0x4e, 0xfb,
	0x5b, 0x47, 0xce, 0x70, 0x1b, 0x1b, 0x03, 0xda, 0x85, 0xad, 0x28, 0xec, 0x6f, 0x8b, 0x90, 0xad,
	0x28, 0x44, 0x87, 0xd0, 0x9a, 0x51, 0xc6, 0xa2, 0xb4, 0xdf, 0x3c, 0x72, 0x86, 0x1d, 0x2c, 0x57,
	0xb9, 0x3d, 0xa1, 0x21, 0xb9, 0x08, 0xfb, 0xcf, 0x84, 0xaf, 0x5c, 0xa1, 0x4f, 0x01, 0xf2, 0xaf,
	0xe9, 0xf2, 0xfa, 0x3b, 0xb2, 0xee, 0xb7, 0x8e, 0x9c, 0xe1, 0x0e, 0xb6, 0x2c, 0x08, 0x41, 0x93,
	0x45, 0xb3, 0xa4, 0xdf, 0x16, 0x3b, 0xe2, 0x7b, 0xf0, 0xcf, 0x96, 0xfe, 0xf7, 0x1f, 0x79, 0x34,
	0x47, 0xaf, 0xa1, 0x15, 0xd0, 0x38, 0x96, 0xbf, 0xde, 0x73, 0xd1, 0x48, 0x08, 0x30, 0xb2, 0xf8,
	0x61, 0xe9, 0x81, 0x4e, 0xa1, 0x93, 0x12, 0x92, 0x5d, 0x24, 0xbf, 0x52, 0x41, 0xc6, 0x78, 0x4f,
	0xdd, 0xe9, 0x54, 0xee, 0x4c, 0x1a, 0x58, 0x7b, 0xa1, 0x63, 0xa3, 0xcc, 0xb6, 0x08, 0x38, 0x30,
	0x01, 0x3f, 0x15, 0x1b, 0x93, 0x86, 0x91, 0xcb, 0x05, 0x90, 0x9f, 0x67, 0xc1, 0xad, 0x10, 0xa1,
	0xe7, 0xee, 0x97, 0x22, 0xce, 0x82, 0xdb, 0x49, 0x03, 0x5b, 0x5e, 0xe8, 0x0d, 0x74, 0xc8, 0x1d,
	0x27, 0x59, 0xe2, 0xcf, 0x85, 0x3c, 0x3d, 0xf7, 0xd0, 0x44, 0x7c, 0x23, 0x77, 0xd4, 0x8f, 0x29,
	0x4f, 0x34, 0x86, 0xee, 0x8c, 0x70, 0x51, 0x59, 0x26, 0x94, 0xeb, 0xb9, 0xcf, 0x4d, 0xd8, 0x3b,
	0xc2, 0x3d, 0xb1, 0x35, 0x69, 0x60, 0xe3, 0x87, 0x8e, 0xa1, 0x13, 0x25, 0xab, 0xd0, 0xe7, 0x3e,
	0x13, 0x9a, 0xf6, 0xdc, 0x3d, 0x19, 0x73, 0x91, 0xac, 0xde, 0xe6, 0xe6, 0x1c, 0x43, 0xb9, 0x78,
	0x6d, 0x78, 0xb6, 0xf2, 0xe7, 0x4b, 0x32, 0xf8, 0x16, 0x90, 0x94, 0x53, 0x89, 0x84, 0xc9, 0x02,
	0xbd, 0x81, 0x5e, 0x5c, 0x58, 0xf3, 0xd0, 0xf7, 0xc8, 0x6f, 0xbb, 0x0d, 0xd6, 0xf0, 0xfc, 0x5e,
	0x2e, 0x96, 0xd6, 0x4b, 0x86, 0xbe, 0x84, 0xb6, 0x5c, 0x3e, 0x5e, 0x4f, 0xac, 0x5c, 0x06, 0x6b,
	0x78, 0xa1, 0xa0, 0x75, 0xf5, 0x6a, 0x13, 0x41, 0x5f, 0x54, 0xb1, 0xef, 0x1f, 0x0d, 0x03, 0xfd,
	0x3b, 0x7c, 0xfc, 0x00, 0x74, 0x6d, 0xde, 0x4f, 0xc2, 0x4e, 0x61, 0x57, 0x61, 0x47, 0xc9, 0xac,
	0x3e, 0xe1, 0x61, 0x15, 0x74, 0xd7, 0x12, 0x3b, 0xcf, 0xac, 0x11, 0x17, 0xb0, 0x57, 0x42, 0xac,
	0xcd, 0xf3, 0xbd, 0x90, 0xd4, 0x86, 0x64, 0x9a, 0xe4, 0x59, 0x18, 0x66, 0x9b, 0xa9, 0xea, 0x3b,
	0xc2, 0x45, 0xf2, 0x07, 0x78, 0x16, 0xa0, 0x1b, 0xe1, 0x59, 0x86, 0x5c, 0x96, 0x20, 0xbf, 0x8f,
	0x18, 0xdf, 0xc0, 0xd5, 0x51, 0xa9, 0x0d, 0xec, 0xa5, 0x3e, 0xbf, 0xaa, 0x23, 0x5d, 0x11, 0x5e,
	0xbf, 0x09, 0xfc, 0xe9, 0xc0, 0xe1, 0x43, 0xf9, 0x6a, 0x0b, 0x78, 0x5a, 0x65, 0xf3, 0x48, 0x0f,
	0xb5, 0x6f, 0xa4, 0xea, 0x43, 0xba, 0x59, 0xd6, 0x3f, 0x35, 0xc7, 0x55, 0xf8, 0x87, 0x7a, 0xb1,
	0xc1, 0xfe, 0x4d, 0x37, 0x22, 0x0b, 0xbb, 0x36, 0xf7, 0xcf, 0xab, 0xe0, 0xd5, 0xa6, 0x6e, 0x80,
	0xff, 0xb0, 0x81, 0x2f, 0x49, 0x9c, 0x52, 0x3a, 0xaf, 0xcf, 0x7a, 0x54, 0x05, 0x7e, 0x51, 0x62,
	0xad, 0xf2, 0x5b, 0xd7, 0x45, 0xdd, 0x51, 0xd9, 0xa3, 0x3e, 0x34, 0x61, 0x99, 0xd6, 0x22, 0x7c,
	0x07, 0xfb, 0x32, 0xcd, 0x84, 0xf8, 0x21, 0xc9, 0x36, 0x46, 0xb6, 0x48, 0x6f, 0x21, 0xaf, 0xe0,
	0xa0, 0x82, 0xbc, 0x91, 0x6e, 0x7f, 0x0f, 0x97, 0x69, 0x5c, 0x59, 0xfe, 0x0d, 0x34, 0x7c, 0x95,
	0x59, 0x83, 0x66, 0xa6, 0xe1, 0x13, 0xf2, 0x7f, 0xba, 0xd2, 0xa3, 0xa5, 0x55, 0x79, 0x0d, 0x26,
	0xd7, 0xa7, 0xe9, 0x8a, 0x70, 0x31, 0xac, 0x7d, 0xe0, 0x46, 0x78, 0x45, 0x43, 0x95, 0xda, 0x66,
	0x7a, 0x60, 0x31, 0x65, 0x98, 0xa4, 0xf3, 0xf5, 0x93, 0x66, 0xd0, 0xaf, 0x00, 0x52, 0x1d, 0x59,
	0xad, 0xa7, 0xde, 0xc0, 0x96, 0xd3, 0x20, 0xd1, 0x87, 0xd8, 0xcb, 0xa8, 0x1f, 0x9e, 0xfb, 0x8c,
	0x3f, 0x09, 0xf2, 0xd1, 0xa3, 0xab, 0xd3, 0x95, 0xab, 0xf9, 0xb7, 0x03, 0x7b, 0x53, 0x77, 0xfa,
	0x03, 0xa7, 0x19, 0xc1, 0x64, 0xb1, 0x24, 0x8c, 0xe7, 0xa3, 0xba, 0x78, 0x3b, 0x04, 0x74, 0x7e,
	0xf1, 0x56, 0xbe, 0x12, 0x2c, 0x0b, 0xf2, 0x60, 0x2f, 0x23, 0x8b, 0xf3, 0x9b, 0x65, 0x72, 0x8b,
	0x49, 0x40, 0xb3, 0x90, 0x55, 0x1a, 0x31, 0x2e, 0xef, 0x4e, 0x1a, 0xb8, 0x1a, 0x80, 0xbe, 0x86,
	0x9d, 0x20, 0x5f, 0xe7, 0x8a, 0x5f, 0xb2, 0x99, 0x9c, 0xb8, 0x55, 0x2b, 0x3d, 0xb7, 0xb6, 0x26,
	0x0d, 0x5c, 0x72, 0x45, 0xa7, 0xd0, 0xcd, 0xc8, 0xa2, 0x68, 0xa5, 0x95, 0xb9, 0x1b, 0x2b, 0x7b,
	0x3e, 0x0b, 0x6b, 0x27, 0xaf, 0x05, 0xcd, 0x7c, 0xca, 0x1d, 0xfc, 0xeb, 0xc0, 0xbe, 0x21, 0xcb,
	0x52, 0x9a, 0x30, 0x92, 0x3f, 0x7b, 0x48, 0x96, 0xd1, 0xe2, 0xa5, 0x50, 0x90, 0x35, 0x06, 0x34,
	0x06, 0x10, 0x03, 0xb5, 0x47, 0xc3, 0x35, 0xab, 0x94, 0xd0, 0xd3, 0x1b, 0xf9, 0x98, 0x6f, 0xdc,
	0xd0, 0x6b, 0x68, 0xdf, 0x14, 0x77, 0x55, 0xf2, 0x52, 0x97, 0x49, 0xde, 0xe0, 0xfc, 0x19, 0x21,
	0x1d, 0xb4, 0x10, 0x4a, 0xc9, 0xe6, 0x7d, 0x21, 0x8c, 0x8c, 0x25, 0x57, 0xf4, 0x0a, 0x3a, 0x7e,
	0x18, 0x16, 0x3f, 0x9e, 0xbf, 0x26, 0x76, 0xf2, 0x89, 0x5e, 0x59, 0xbc, 0x0e, 0xb4, 0x32, 0xc2,
	0x96, 0x73, 0x3e, 0xf8, 0x05, 0x76, 0x14, 0x6b, 0x71, 0x0b, 0x10, 0x34, 0xf3, 0x77, 0x9d, 0x20,
	0xbb, 0x8d, 0xc5, 0x77, 0x2d, 0x9e, 0x4a, 0x57, 0xef, 0xb3, 0x9f, 0x3f, 0x99, 0x45, 0xfc, 0x66,
	0x79, 0x3d, 0x0a, 0x68, 0x7c, 0x32, 0x1e, 0x07, 0xc9, 0x89, 0x78, 0x82, 0x8e, 0xc7, 0x27, 0x22,
	0xc3, 0x75, 0x4b, 0x9c, 0x9e, 0xf1, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xa1, 0xf9, 0x95,
	0xc0, 0x0e, 0x00, 0x00,
}
