// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p2pnext.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MessageComm struct {
	// shared between all requests
	Version    string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	Timestamp  int64  `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Id         string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Gossip     bool   `protobuf:"varint,4,opt,name=gossip" json:"gossip,omitempty"`
	NodeId     string `protobuf:"bytes,5,opt,name=nodeId" json:"nodeId,omitempty"`
	NodePubKey []byte `protobuf:"bytes,6,opt,name=nodePubKey,proto3" json:"nodePubKey,omitempty"`
	Sign       []byte `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (m *MessageComm) Reset()                    { *m = MessageComm{} }
func (m *MessageComm) String() string            { return proto.CompactTextString(m) }
func (*MessageComm) ProtoMessage()               {}
func (*MessageComm) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *MessageComm) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *MessageComm) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MessageComm) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MessageComm) GetGossip() bool {
	if m != nil {
		return m.Gossip
	}
	return false
}

func (m *MessageComm) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *MessageComm) GetNodePubKey() []byte {
	if m != nil {
		return m.NodePubKey
	}
	return nil
}

func (m *MessageComm) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

// *
// 请求获取远程节点的节点信息
type MessagePeerInfoReq struct {
	// / p2p版本
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
}

func (m *MessagePeerInfoReq) Reset()                    { *m = MessagePeerInfoReq{} }
func (m *MessagePeerInfoReq) String() string            { return proto.CompactTextString(m) }
func (*MessagePeerInfoReq) ProtoMessage()               {}
func (*MessagePeerInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *MessagePeerInfoReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

type MessagePeerInfoResp struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *P2PPeerInfo `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessagePeerInfoResp) Reset()                    { *m = MessagePeerInfoResp{} }
func (m *MessagePeerInfoResp) String() string            { return proto.CompactTextString(m) }
func (*MessagePeerInfoResp) ProtoMessage()               {}
func (*MessagePeerInfoResp) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *MessagePeerInfoResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessagePeerInfoResp) GetMessage() *P2PPeerInfo {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageP2PVersionReq struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *P2PVersion  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageP2PVersionReq) Reset()                    { *m = MessageP2PVersionReq{} }
func (m *MessageP2PVersionReq) String() string            { return proto.CompactTextString(m) }
func (*MessageP2PVersionReq) ProtoMessage()               {}
func (*MessageP2PVersionReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *MessageP2PVersionReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageP2PVersionReq) GetMessage() *P2PVersion {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageP2PVersionResp struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *P2PVerAck   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageP2PVersionResp) Reset()                    { *m = MessageP2PVersionResp{} }
func (m *MessageP2PVersionResp) String() string            { return proto.CompactTextString(m) }
func (*MessageP2PVersionResp) ProtoMessage()               {}
func (*MessageP2PVersionResp) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *MessageP2PVersionResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageP2PVersionResp) GetMessage() *P2PVerAck {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessagePingReq struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *P2PPing     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessagePingReq) Reset()                    { *m = MessagePingReq{} }
func (m *MessagePingReq) String() string            { return proto.CompactTextString(m) }
func (*MessagePingReq) ProtoMessage()               {}
func (*MessagePingReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *MessagePingReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessagePingReq) GetMessage() *P2PPing {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessagePingResp struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *P2PPong     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessagePingResp) Reset()                    { *m = MessagePingResp{} }
func (m *MessagePingResp) String() string            { return proto.CompactTextString(m) }
func (*MessagePingResp) ProtoMessage()               {}
func (*MessagePingResp) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *MessagePingResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessagePingResp) GetMessage() *P2PPong {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageAddrReq struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *P2PGetAddr  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageAddrReq) Reset()                    { *m = MessageAddrReq{} }
func (m *MessageAddrReq) String() string            { return proto.CompactTextString(m) }
func (*MessageAddrReq) ProtoMessage()               {}
func (*MessageAddrReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *MessageAddrReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageAddrReq) GetMessage() *P2PGetAddr {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageAddrResp struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *P2PAddr     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageAddrResp) Reset()                    { *m = MessageAddrResp{} }
func (m *MessageAddrResp) String() string            { return proto.CompactTextString(m) }
func (*MessageAddrResp) ProtoMessage()               {}
func (*MessageAddrResp) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

func (m *MessageAddrResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageAddrResp) GetMessage() *P2PAddr {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageAddrList struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *P2PAddrList `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageAddrList) Reset()                    { *m = MessageAddrList{} }
func (m *MessageAddrList) String() string            { return proto.CompactTextString(m) }
func (*MessageAddrList) ProtoMessage()               {}
func (*MessageAddrList) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func (m *MessageAddrList) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageAddrList) GetMessage() *P2PAddrList {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageExternalNetReq struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
}

func (m *MessageExternalNetReq) Reset()                    { *m = MessageExternalNetReq{} }
func (m *MessageExternalNetReq) String() string            { return proto.CompactTextString(m) }
func (*MessageExternalNetReq) ProtoMessage()               {}
func (*MessageExternalNetReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

func (m *MessageExternalNetReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

type MessageExternalNetResp struct {
	MessageData *MessageComm     `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *P2PExternalInfo `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageExternalNetResp) Reset()                    { *m = MessageExternalNetResp{} }
func (m *MessageExternalNetResp) String() string            { return proto.CompactTextString(m) }
func (*MessageExternalNetResp) ProtoMessage()               {}
func (*MessageExternalNetResp) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

func (m *MessageExternalNetResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageExternalNetResp) GetMessage() *P2PExternalInfo {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageGetBlocksReq struct {
	MessageData *MessageComm  `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *P2PGetBlocks `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageGetBlocksReq) Reset()                    { *m = MessageGetBlocksReq{} }
func (m *MessageGetBlocksReq) String() string            { return proto.CompactTextString(m) }
func (*MessageGetBlocksReq) ProtoMessage()               {}
func (*MessageGetBlocksReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{12} }

func (m *MessageGetBlocksReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageGetBlocksReq) GetMessage() *P2PGetBlocks {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageGetBlocksResp struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *InvDatas    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageGetBlocksResp) Reset()                    { *m = MessageGetBlocksResp{} }
func (m *MessageGetBlocksResp) String() string            { return proto.CompactTextString(m) }
func (*MessageGetBlocksResp) ProtoMessage()               {}
func (*MessageGetBlocksResp) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{13} }

func (m *MessageGetBlocksResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageGetBlocksResp) GetMessage() *InvDatas {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageGetMempoolReq struct {
	MessageData *MessageComm   `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *P2PGetMempool `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageGetMempoolReq) Reset()                    { *m = MessageGetMempoolReq{} }
func (m *MessageGetMempoolReq) String() string            { return proto.CompactTextString(m) }
func (*MessageGetMempoolReq) ProtoMessage()               {}
func (*MessageGetMempoolReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{14} }

func (m *MessageGetMempoolReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageGetMempoolReq) GetMessage() *P2PGetMempool {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageVersion struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *Versions    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageVersion) Reset()                    { *m = MessageVersion{} }
func (m *MessageVersion) String() string            { return proto.CompactTextString(m) }
func (*MessageVersion) ProtoMessage()               {}
func (*MessageVersion) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{15} }

func (m *MessageVersion) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageVersion) GetMessage() *Versions {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageHeaderReq struct {
	MessageData *MessageComm   `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *P2PGetHeaders `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageHeaderReq) Reset()                    { *m = MessageHeaderReq{} }
func (m *MessageHeaderReq) String() string            { return proto.CompactTextString(m) }
func (*MessageHeaderReq) ProtoMessage()               {}
func (*MessageHeaderReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{16} }

func (m *MessageHeaderReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageHeaderReq) GetMessage() *P2PGetHeaders {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageHeaderResp struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *P2PHeaders  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageHeaderResp) Reset()                    { *m = MessageHeaderResp{} }
func (m *MessageHeaderResp) String() string            { return proto.CompactTextString(m) }
func (*MessageHeaderResp) ProtoMessage()               {}
func (*MessageHeaderResp) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{17} }

func (m *MessageHeaderResp) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageHeaderResp) GetMessage() *P2PHeaders {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageInvDataReq struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *InvData     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageInvDataReq) Reset()                    { *m = MessageInvDataReq{} }
func (m *MessageInvDataReq) String() string            { return proto.CompactTextString(m) }
func (*MessageInvDataReq) ProtoMessage()               {}
func (*MessageInvDataReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{18} }

func (m *MessageInvDataReq) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageInvDataReq) GetMessage() *InvData {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessagePeerList struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *PeerList    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessagePeerList) Reset()                    { *m = MessagePeerList{} }
func (m *MessagePeerList) String() string            { return proto.CompactTextString(m) }
func (*MessagePeerList) ProtoMessage()               {}
func (*MessagePeerList) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{19} }

func (m *MessagePeerList) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessagePeerList) GetMessage() *PeerList {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessageNetInfo struct {
	MessageData *MessageComm `protobuf:"bytes,1,opt,name=messageData" json:"messageData,omitempty"`
	Message     *NodeNetInfo `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageNetInfo) Reset()                    { *m = MessageNetInfo{} }
func (m *MessageNetInfo) String() string            { return proto.CompactTextString(m) }
func (*MessageNetInfo) ProtoMessage()               {}
func (*MessageNetInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{20} }

func (m *MessageNetInfo) GetMessageData() *MessageComm {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *MessageNetInfo) GetMessage() *NodeNetInfo {
	if m != nil {
		return m.Message
	}
	return nil
}

type MessagePeersReply struct {
	Common     *MessageComm `protobuf:"bytes,1,opt,name=common" json:"common,omitempty"`
	PeersReply *PeersReply  `protobuf:"bytes,2,opt,name=peersReply" json:"peersReply,omitempty"`
}

func (m *MessagePeersReply) Reset()                    { *m = MessagePeersReply{} }
func (m *MessagePeersReply) String() string            { return proto.CompactTextString(m) }
func (*MessagePeersReply) ProtoMessage()               {}
func (*MessagePeersReply) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{21} }

func (m *MessagePeersReply) GetCommon() *MessageComm {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *MessagePeersReply) GetPeersReply() *PeersReply {
	if m != nil {
		return m.PeersReply
	}
	return nil
}

type MessageBroadCast struct {
	Common  *MessageComm   `protobuf:"bytes,1,opt,name=common" json:"common,omitempty"`
	Message *BroadCastData `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *MessageBroadCast) Reset()                    { *m = MessageBroadCast{} }
func (m *MessageBroadCast) String() string            { return proto.CompactTextString(m) }
func (*MessageBroadCast) ProtoMessage()               {}
func (*MessageBroadCast) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{22} }

func (m *MessageBroadCast) GetCommon() *MessageComm {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *MessageBroadCast) GetMessage() *BroadCastData {
	if m != nil {
		return m.Message
	}
	return nil
}

func init() {
	proto.RegisterType((*MessageComm)(nil), "types.MessageComm")
	proto.RegisterType((*MessagePeerInfoReq)(nil), "types.MessagePeerInfoReq")
	proto.RegisterType((*MessagePeerInfoResp)(nil), "types.MessagePeerInfoResp")
	proto.RegisterType((*MessageP2PVersionReq)(nil), "types.MessageP2PVersionReq")
	proto.RegisterType((*MessageP2PVersionResp)(nil), "types.MessageP2PVersionResp")
	proto.RegisterType((*MessagePingReq)(nil), "types.MessagePingReq")
	proto.RegisterType((*MessagePingResp)(nil), "types.MessagePingResp")
	proto.RegisterType((*MessageAddrReq)(nil), "types.MessageAddrReq")
	proto.RegisterType((*MessageAddrResp)(nil), "types.MessageAddrResp")
	proto.RegisterType((*MessageAddrList)(nil), "types.MessageAddrList")
	proto.RegisterType((*MessageExternalNetReq)(nil), "types.MessageExternalNetReq")
	proto.RegisterType((*MessageExternalNetResp)(nil), "types.MessageExternalNetResp")
	proto.RegisterType((*MessageGetBlocksReq)(nil), "types.MessageGetBlocksReq")
	proto.RegisterType((*MessageGetBlocksResp)(nil), "types.MessageGetBlocksResp")
	proto.RegisterType((*MessageGetMempoolReq)(nil), "types.MessageGetMempoolReq")
	proto.RegisterType((*MessageVersion)(nil), "types.MessageVersion")
	proto.RegisterType((*MessageHeaderReq)(nil), "types.MessageHeaderReq")
	proto.RegisterType((*MessageHeaderResp)(nil), "types.MessageHeaderResp")
	proto.RegisterType((*MessageInvDataReq)(nil), "types.MessageInvDataReq")
	proto.RegisterType((*MessagePeerList)(nil), "types.MessagePeerList")
	proto.RegisterType((*MessageNetInfo)(nil), "types.MessageNetInfo")
	proto.RegisterType((*MessagePeersReply)(nil), "types.MessagePeersReply")
	proto.RegisterType((*MessageBroadCast)(nil), "types.MessageBroadCast")
}

func init() { proto.RegisterFile("p2pnext.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 630 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x96, 0x5f, 0x6f, 0xda, 0x3c,
	0x14, 0xc6, 0x15, 0xda, 0xc2, 0x8b, 0x79, 0x47, 0x8b, 0xdb, 0xa1, 0x68, 0xda, 0x1f, 0xc4, 0x15,
	0xeb, 0x36, 0xd8, 0x60, 0x5f, 0xa0, 0x74, 0x53, 0xc7, 0x36, 0x10, 0xca, 0xc5, 0x2e, 0x76, 0x17,
	0x92, 0x33, 0x1a, 0x95, 0xc4, 0x6e, 0x6c, 0x18, 0x4c, 0xbb, 0xd8, 0xd7, 0xda, 0xb7, 0x9b, 0x08,
	0xb6, 0xe3, 0xa4, 0xb4, 0xd2, 0xbc, 0x72, 0x17, 0x3b, 0xe7, 0x3c, 0xbf, 0x3c, 0x3e, 0xc7, 0x47,
	0x41, 0x0f, 0x68, 0x97, 0x46, 0xb0, 0xe4, 0x6d, 0x1a, 0x13, 0x4e, 0xf0, 0x01, 0x5f, 0x51, 0x60,
	0x8f, 0xca, 0xb4, 0x4b, 0x37, 0x3b, 0xcd, 0xdf, 0x16, 0xaa, 0x0c, 0x81, 0x31, 0x77, 0x0a, 0xe7,
	0x24, 0x0c, 0xb1, 0x8d, 0x4a, 0x0b, 0x88, 0x59, 0x40, 0x22, 0xdb, 0x6a, 0x58, 0xad, 0xb2, 0x23,
	0x97, 0xf8, 0x31, 0x2a, 0xf3, 0x20, 0x04, 0xc6, 0xdd, 0x90, 0xda, 0x85, 0x86, 0xd5, 0xda, 0x73,
	0xd2, 0x0d, 0x5c, 0x45, 0x85, 0xc0, 0xb7, 0xf7, 0x92, 0x94, 0x42, 0xe0, 0xe3, 0x3a, 0x2a, 0x4e,
	0x09, 0x63, 0x01, 0xb5, 0xf7, 0x1b, 0x56, 0xeb, 0x3f, 0x47, 0xac, 0xd6, 0xfb, 0x11, 0xf1, 0x61,
	0xe0, 0xdb, 0x07, 0x49, 0xac, 0x58, 0xe1, 0xa7, 0x08, 0xad, 0x9f, 0xc6, 0xf3, 0xc9, 0x27, 0x58,
	0xd9, 0xc5, 0x86, 0xd5, 0xfa, 0xdf, 0xd1, 0x76, 0x30, 0x46, 0xfb, 0x2c, 0x98, 0x46, 0x76, 0x29,
	0x79, 0x93, 0x3c, 0x37, 0x3f, 0x22, 0x2c, 0x3e, 0x7d, 0x0c, 0x10, 0x0f, 0xa2, 0x6f, 0xc4, 0x81,
	0x6b, 0xfc, 0x16, 0x55, 0xc2, 0xcd, 0xee, 0x3b, 0x97, 0xbb, 0x89, 0x8b, 0x4a, 0x17, 0xb7, 0x13,
	0xe7, 0x6d, 0xcd, 0xaa, 0xa3, 0x87, 0x35, 0x57, 0xe8, 0xf8, 0x86, 0x16, 0xa3, 0x66, 0x62, 0xf8,
	0x25, 0x2a, 0x89, 0x65, 0x72, 0x50, 0x69, 0xc6, 0xb8, 0x3b, 0x56, 0xf2, 0x32, 0xa4, 0xb9, 0x42,
	0x27, 0x12, 0xdd, 0x1d, 0x7f, 0xd9, 0x9c, 0xb6, 0xb1, 0x11, 0xfc, 0x22, 0xcf, 0xae, 0xa5, 0x6c,
	0x29, 0xae, 0xa1, 0x1f, 0x6e, 0x41, 0x1b, 0xfb, 0x3e, 0xcd, 0xb3, 0x8f, 0x32, 0xec, 0x33, 0xef,
	0x2a, 0x45, 0x53, 0x54, 0x95, 0xe8, 0x20, 0x9a, 0x9a, 0xfb, 0x6d, 0xe5, 0x99, 0x55, 0xed, 0xac,
	0xd7, 0xca, 0x8a, 0x78, 0x8d, 0x0e, 0x33, 0x44, 0x63, 0x9b, 0x77, 0x22, 0x89, 0x8e, 0x64, 0xca,
	0xe4, 0x99, 0xef, 0xc7, 0xbb, 0x29, 0xea, 0x05, 0xf0, 0x44, 0x7c, 0x8b, 0xcf, 0x0d, 0x74, 0x27,
	0x3e, 0xb3, 0xc8, 0x79, 0x06, 0xf9, 0x39, 0x60, 0x7c, 0x07, 0x37, 0x47, 0x4a, 0xa7, 0xd8, 0xa1,
	0x6a, 0xdf, 0xf7, 0x4b, 0x0e, 0x71, 0xe4, 0xce, 0x46, 0xc0, 0xcd, 0x67, 0xc0, 0x2f, 0x0b, 0xd5,
	0xb7, 0xe9, 0x19, 0x1f, 0xe0, 0xeb, 0xbc, 0x9b, 0x7a, 0xea, 0x46, 0x12, 0xb2, 0xb3, 0xe0, 0x87,
	0x1a, 0x43, 0x17, 0xc0, 0xfb, 0x33, 0xe2, 0x5d, 0x31, 0xf3, 0xae, 0x79, 0x95, 0xc7, 0x1f, 0x67,
	0xba, 0x46, 0xc8, 0x2b, 0xf6, 0x77, 0x35, 0x87, 0x34, 0xb6, 0xb1, 0xf7, 0xe7, 0x79, 0xf8, 0xa1,
	0xc8, 0x18, 0x44, 0x8b, 0x75, 0x80, 0x06, 0xfe, 0xa9, 0x83, 0x87, 0x10, 0x52, 0x42, 0x66, 0xe6,
	0xae, 0xdb, 0x79, 0xf0, 0x49, 0xc6, 0xb5, 0xd4, 0xd7, 0xae, 0x8b, 0xbc, 0xa3, 0x62, 0x00, 0xde,
	0xb7, 0x61, 0x21, 0xab, 0x19, 0x5e, 0xa2, 0x23, 0x21, 0xf3, 0x01, 0x5c, 0x1f, 0xe2, 0x9d, 0x99,
	0xdd, 0xc8, 0x6b, 0xe4, 0x05, 0xaa, 0xe5, 0xc8, 0xc6, 0x05, 0xbe, 0x6b, 0x26, 0xdd, 0xe0, 0x32,
	0xc5, 0x15, 0xe5, 0xdf, 0xc1, 0xc0, 0x97, 0xca, 0x0a, 0x1a, 0xa7, 0x03, 0x1f, 0xe0, 0x5f, 0xa6,
	0xd2, 0xad, 0xa5, 0x95, 0xba, 0x29, 0x93, 0xab, 0x6e, 0x1a, 0x01, 0x5f, 0xdf, 0xed, 0xfb, 0x1e,
	0x84, 0x23, 0xe2, 0x4b, 0x69, 0xdd, 0x69, 0x4d, 0x73, 0xca, 0x1c, 0xa0, 0xb3, 0x15, 0x3e, 0x45,
	0x45, 0x8f, 0x84, 0xa1, 0xf8, 0x93, 0xdb, 0xce, 0x14, 0x11, 0xf8, 0x0d, 0x42, 0x54, 0x65, 0xe6,
	0xeb, 0xa9, 0x5e, 0x38, 0x5a, 0x50, 0x33, 0x52, 0x4d, 0xdc, 0x8f, 0x89, 0xeb, 0x9f, 0xbb, 0x8c,
	0xff, 0x15, 0xf2, 0xd6, 0xd6, 0x55, 0x72, 0x99, 0x6a, 0xf6, 0x9f, 0x7d, 0x7d, 0x32, 0x0d, 0xf8,
	0xe5, 0x7c, 0xd2, 0xf6, 0x48, 0xd8, 0xe9, 0xf5, 0xbc, 0xa8, 0xe3, 0x5d, 0xba, 0x41, 0xd4, 0xeb,
	0x75, 0x92, 0xbc, 0x49, 0x31, 0xf9, 0xa3, 0xed, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x51,
	0x3b, 0xd6, 0xf4, 0x0a, 0x00, 0x00,
}
