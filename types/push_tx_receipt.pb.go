// Code generated by protoc-gen-go. DO NOT EDIT.
// source: push_tx_receipt.proto

package types // import "github.com/33cn/chain33/types"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TxReceipts4SubscribePerBlk struct {
	Tx                   []*Transaction `protobuf:"bytes,1,rep,name=tx,proto3" json:"tx,omitempty"`
	ReceiptData          []*ReceiptData `protobuf:"bytes,2,rep,name=receiptData,proto3" json:"receiptData,omitempty"`
	KV                   []*KeyValue    `protobuf:"bytes,3,rep,name=KV,proto3" json:"KV,omitempty"`
	Height               int64          `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	BlockHash            []byte         `protobuf:"bytes,5,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	ParentHash           []byte         `protobuf:"bytes,6,opt,name=parentHash,proto3" json:"parentHash,omitempty"`
	PreviousHash         []byte         `protobuf:"bytes,7,opt,name=previousHash,proto3" json:"previousHash,omitempty"`
	AddDelType           int32          `protobuf:"varint,8,opt,name=addDelType,proto3" json:"addDelType,omitempty"`
	SeqNum               int64          `protobuf:"varint,9,opt,name=seqNum,proto3" json:"seqNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TxReceipts4SubscribePerBlk) Reset()         { *m = TxReceipts4SubscribePerBlk{} }
func (m *TxReceipts4SubscribePerBlk) String() string { return proto.CompactTextString(m) }
func (*TxReceipts4SubscribePerBlk) ProtoMessage()    {}
func (*TxReceipts4SubscribePerBlk) Descriptor() ([]byte, []int) {
	return fileDescriptor_push_tx_receipt_e48c685e34a32408, []int{0}
}
func (m *TxReceipts4SubscribePerBlk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxReceipts4SubscribePerBlk.Unmarshal(m, b)
}
func (m *TxReceipts4SubscribePerBlk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxReceipts4SubscribePerBlk.Marshal(b, m, deterministic)
}
func (dst *TxReceipts4SubscribePerBlk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxReceipts4SubscribePerBlk.Merge(dst, src)
}
func (m *TxReceipts4SubscribePerBlk) XXX_Size() int {
	return xxx_messageInfo_TxReceipts4SubscribePerBlk.Size(m)
}
func (m *TxReceipts4SubscribePerBlk) XXX_DiscardUnknown() {
	xxx_messageInfo_TxReceipts4SubscribePerBlk.DiscardUnknown(m)
}

var xxx_messageInfo_TxReceipts4SubscribePerBlk proto.InternalMessageInfo

func (m *TxReceipts4SubscribePerBlk) GetTx() []*Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *TxReceipts4SubscribePerBlk) GetReceiptData() []*ReceiptData {
	if m != nil {
		return m.ReceiptData
	}
	return nil
}

func (m *TxReceipts4SubscribePerBlk) GetKV() []*KeyValue {
	if m != nil {
		return m.KV
	}
	return nil
}

func (m *TxReceipts4SubscribePerBlk) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *TxReceipts4SubscribePerBlk) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *TxReceipts4SubscribePerBlk) GetParentHash() []byte {
	if m != nil {
		return m.ParentHash
	}
	return nil
}

func (m *TxReceipts4SubscribePerBlk) GetPreviousHash() []byte {
	if m != nil {
		return m.PreviousHash
	}
	return nil
}

func (m *TxReceipts4SubscribePerBlk) GetAddDelType() int32 {
	if m != nil {
		return m.AddDelType
	}
	return 0
}

func (m *TxReceipts4SubscribePerBlk) GetSeqNum() int64 {
	if m != nil {
		return m.SeqNum
	}
	return 0
}

type TxReceipts4Subscribe struct {
	TxReceipts           []*TxReceipts4SubscribePerBlk `protobuf:"bytes,1,rep,name=txReceipts,proto3" json:"txReceipts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *TxReceipts4Subscribe) Reset()         { *m = TxReceipts4Subscribe{} }
func (m *TxReceipts4Subscribe) String() string { return proto.CompactTextString(m) }
func (*TxReceipts4Subscribe) ProtoMessage()    {}
func (*TxReceipts4Subscribe) Descriptor() ([]byte, []int) {
	return fileDescriptor_push_tx_receipt_e48c685e34a32408, []int{1}
}
func (m *TxReceipts4Subscribe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxReceipts4Subscribe.Unmarshal(m, b)
}
func (m *TxReceipts4Subscribe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxReceipts4Subscribe.Marshal(b, m, deterministic)
}
func (dst *TxReceipts4Subscribe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxReceipts4Subscribe.Merge(dst, src)
}
func (m *TxReceipts4Subscribe) XXX_Size() int {
	return xxx_messageInfo_TxReceipts4Subscribe.Size(m)
}
func (m *TxReceipts4Subscribe) XXX_DiscardUnknown() {
	xxx_messageInfo_TxReceipts4Subscribe.DiscardUnknown(m)
}

var xxx_messageInfo_TxReceipts4Subscribe proto.InternalMessageInfo

func (m *TxReceipts4Subscribe) GetTxReceipts() []*TxReceipts4SubscribePerBlk {
	if m != nil {
		return m.TxReceipts
	}
	return nil
}

func init() {
	proto.RegisterType((*TxReceipts4SubscribePerBlk)(nil), "types.TxReceipts4SubscribePerBlk")
	proto.RegisterType((*TxReceipts4Subscribe)(nil), "types.TxReceipts4Subscribe")
}

func init() {
	proto.RegisterFile("push_tx_receipt.proto", fileDescriptor_push_tx_receipt_e48c685e34a32408)
}

var fileDescriptor_push_tx_receipt_e48c685e34a32408 = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xd1, 0x4a, 0xfb, 0x30,
	0x18, 0xc5, 0x69, 0xf7, 0xdf, 0xfe, 0x2e, 0x1b, 0x88, 0x41, 0x25, 0x0c, 0x75, 0xb5, 0x57, 0xbd,
	0xea, 0xc0, 0xee, 0x05, 0x1c, 0xbb, 0x10, 0x06, 0x22, 0x71, 0x0c, 0xf4, 0x66, 0xa4, 0x59, 0x58,
	0xc3, 0xda, 0x26, 0x26, 0xa9, 0x74, 0x8f, 0xe8, 0x5b, 0xc9, 0xd2, 0xce, 0x76, 0xa0, 0x97, 0xdf,
	0xef, 0x9c, 0xef, 0xe4, 0xe3, 0x04, 0x5c, 0xc9, 0x42, 0x27, 0x6b, 0x53, 0xae, 0x15, 0xa3, 0x8c,
	0x4b, 0x13, 0x4a, 0x25, 0x8c, 0x80, 0x5d, 0xb3, 0x97, 0x4c, 0x8f, 0x86, 0x54, 0x64, 0x99, 0xc8,
	0x2b, 0x38, 0xba, 0x30, 0x8a, 0xe4, 0x9a, 0x50, 0xc3, 0x8f, 0xc8, 0xff, 0x72, 0xc1, 0x68, 0x59,
	0xe2, 0x6a, 0x57, 0x4f, 0x5f, 0x8b, 0x58, 0x53, 0xc5, 0x63, 0xf6, 0xc2, 0xd4, 0x2c, 0xdd, 0x41,
	0x1f, 0xb8, 0xa6, 0x44, 0x8e, 0xd7, 0x09, 0x06, 0x0f, 0x30, 0xb4, 0x99, 0xe1, 0xb2, 0x09, 0xc1,
	0xae, 0x29, 0xe1, 0x14, 0x0c, 0xea, 0xb7, 0xe7, 0xc4, 0x10, 0xe4, 0x9e, 0x98, 0x71, 0xa3, 0xe0,
	0xb6, 0x0d, 0x8e, 0x81, 0xbb, 0x58, 0xa1, 0x8e, 0x35, 0x9f, 0xd7, 0xe6, 0x05, 0xdb, 0xaf, 0x48,
	0x5a, 0x30, 0xec, 0x2e, 0x56, 0xf0, 0x1a, 0xf4, 0x12, 0xc6, 0xb7, 0x89, 0x41, 0xff, 0x3c, 0x27,
	0xe8, 0xe0, 0x7a, 0x82, 0x37, 0xa0, 0x1f, 0xa7, 0x82, 0xee, 0x9e, 0x88, 0x4e, 0x50, 0xd7, 0x73,
	0x82, 0x21, 0x6e, 0x00, 0xbc, 0x03, 0x40, 0x12, 0xc5, 0x72, 0x63, 0xe5, 0x9e, 0x95, 0x5b, 0x04,
	0xfa, 0x60, 0x28, 0x15, 0xfb, 0xe4, 0xa2, 0xd0, 0xd6, 0xf1, 0xdf, 0x3a, 0x4e, 0xd8, 0x21, 0x83,
	0x6c, 0x36, 0x73, 0x96, 0x2e, 0xf7, 0x92, 0xa1, 0x33, 0xcf, 0x09, 0xba, 0xb8, 0x45, 0x0e, 0x97,
	0x69, 0xf6, 0xf1, 0x5c, 0x64, 0xa8, 0x5f, 0x5d, 0x56, 0x4d, 0xfe, 0x1b, 0xb8, 0xfc, 0xad, 0x4a,
	0xf8, 0x08, 0x80, 0xf9, 0xe1, 0x75, 0x99, 0xf7, 0xc7, 0x32, 0xff, 0xec, 0x1e, 0xb7, 0x96, 0x66,
	0xe3, 0xf7, 0xdb, 0x2d, 0x37, 0x49, 0x11, 0x87, 0x54, 0x64, 0x93, 0x28, 0xa2, 0xf9, 0x84, 0x26,
	0x84, 0xe7, 0x51, 0x34, 0xb1, 0x39, 0x71, 0xcf, 0x7e, 0x67, 0xf4, 0x1d, 0x00, 0x00, 0xff, 0xff,
	0x59, 0x25, 0x34, 0xdb, 0x0f, 0x02, 0x00, 0x00,
}
